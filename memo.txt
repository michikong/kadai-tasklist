課題：タスク管理アプリの作成
ここまでで、 Model, Router, Controller, View を一通り学び、一区切りできたので、課題に取り組んで全体を復習しておきましょう。
タスクを管理できるWebアプリケーションを作成して、最後に GitHub に kadai-tasklist というリモートリポジトリを作成してプッシュしてください。
以下、仕様について述べます。
* Rails で tasklist アプリを作成してください。
* タスクは、tasks テーブルを作成し、content カラムで構成されます。
* タスクの Router には resources を利用してください。
* resources で生成される全てのアクションを実装してください。
* View は index (タスク一覧）、show（詳細ページ）、new（作成ページ）、edit（編集ページ）を作成してください。
* また、トップページはタスクリスト一覧と同じページにルーティングしてください。
* GitHub に kadai-tasklist でプッシュしてください。


Railsプロジェクトの作成
$ rails _5.2.2_ new tasklist --database=mysql --skip-bundle --skip-test

Gemfile に書かれたライブラリ一覧をインストール
$ bundle install

バージョン管理を開始
$ git init

ここまでの内容をコミット
$ git add .
$ git commit -m "init Rails Project"

データベースを作成
$ rails db:create

サーバを起動してデータベースの接続を確認
$ sudo service mysqld start
$ rails s

Rails と MySQLの連携設定を確認
config/database.yml

Task モデルを作成
Task は content というメッセージ内容（文字列）を持つように
g は generate の略
$ rails g model Task content:string

マイグレーションの実行(MySQL を起動してから)
$ rails db:migrate


マイグレーションの確認

MySQL ログイン
$ mysql -u root

データベースの選択
mysql> use tasklist_development

テーブル一覧確認（tasksテーブルが作成されているか確認）
mysql> show tables;

テーブル設計の確認
mysql> describe tasks;

config/routes.rb 完成

Rails.application.routes.draw do
  root to: 'tasks#index'

  resources :tasks
end


Router の確認
$ rails routes

Controller の生成
Helper と CSS と JavaScript を自動生成しないオプション
$ rails g controller Tasks --no-helper --no-assets

